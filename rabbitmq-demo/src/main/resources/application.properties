spring.application.name=rabbitmq-demo
server.port=8081
# Custom DataSource
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/security_test?autoReconnect=true&useSSL=false

# JPA
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# h2
# spring.h2.console.enabled=true

logging.level.org.springframework.data=INFO
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG

# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
# 最大连接池数量
spring.datasource.druid.max-active=30
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=true
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
# druid连接池监控
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=123
# 排除一些静态资源，以提高效率
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*

# mqtt configuration
mqtt.server=tcp://192.168.20.13:61613
mqtt.port=61613
mqtt.username=admin
mqtt.password=admin

# redis
spring.redis.host=localhost
spring.redis.password=nutshell
spring.redis.port=6379

# rabbitmq configuration
todo.amqp.queue=.spring.boot
spring.rabbitmq.host=localhost
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.port=5672
#spring.rabbitmq.virtual-host=/production
tjw.url=http://122.225.91.190:17002
tjw.farmUrl=http://122.225.91.190:19001
tjw.base-path=/api/v1/light/list?id=led1
dingtalk.url=https://oapi.dingtalk.com/robot/send?access_token=7fa51bfefb50d3bc529fd042a711b28001ddc3b5d14785b770582758937bb040

# nacos configuration
nacos.config.server-addr=127.0.0.1:8848
# endpoint http://localhost:8080/actuator/nacos-config
# health http://localhost:8080/actuator/health
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# consul configuration
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.config.prefix=config
spring.cloud.consul.config.enabled=true
spring.cloud.consul.config.format=YAML
spring.cloud.consul.config.data-key=data
spring.cloud.consul.discovery.service-name=${spring.application.name}
#spring.cloud.consul.discovery.enabled=true
#spring.cloud.consul.discovery.register=true
#spring.cloud.consul.discovery.deregister=true
#spring.cloud.consul.discovery.prefer-ip-address=true
#spring.cloud.consul.discovery.health-check-interval=10s
#spring.cloud.consul.discovery.health-check-critical-timeout=30s
#spring.cloud.consul.discovery.health-check-path=/health
# 应用名称+服务器IP+端口
spring.cloud.consul.discovery.instance-id=api-v1